/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package py.gov.itaipu.controlacceso.view.seguridad;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdesktop.observablecollections.ObservableCollections;
import py.gov.itaipu.controlacceso.action.CRUDAction;
import py.gov.itaipu.controlacceso.action.seguridad.RolAction;
import py.gov.itaipu.controlacceso.model.Funcionalidad;
import py.gov.itaipu.controlacceso.model.Rol;
import py.gov.itaipu.controlacceso.model.Usuario;
import py.gov.itaipu.controlacceso.model.exception.EntidadExiste;
import py.gov.itaipu.controlacceso.model.exception.ErrorInesperado;
import py.gov.itaipu.controlacceso.utils.windows.WindowUtil;
import py.gov.itaipu.controlacceso.view.JDialogAbout;

/**
 *
 * @author fboy
 */
public class JDialogSeguridadMant extends javax.swing.JDialog {

    private Rol rol;
    private CRUDAction<Rol> rolAction;
    private CRUDAction<Usuario> usuAction;
    private CRUDAction<Funcionalidad> funAction;
    private List<Usuario> usuariosTodos;
    private List<Funcionalidad> funcionalidadesTodos;

    /**
     * Creates new form JDialogSeguridadMant
     */
    public JDialogSeguridadMant(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            rol = new Rol();
            rol.setUsuarios(new ArrayList<Usuario>());
            rol.setFuncionalidades(new ArrayList<Funcionalidad>());
            rolAction = new CRUDAction<Rol>(new Rol());
            usuAction = new CRUDAction<Usuario>(new Usuario());
            funAction = new CRUDAction<Funcionalidad>(new Funcionalidad());

            usuariosTodos = usuAction.findAll();
            funcionalidadesTodos = funAction.findAll();
            initComponents();
            this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/resource/img/bandera-paraguay.png")).getImage());
                ///SE OCULTAN FUNCIONALIDADES PARA FUTURO USO
                jPanelFuncionalidades.setVisible(false);
                jTextFieldRolNuevo.setVisible(false);
                jButtonRolAdd.setVisible(false);
                jButtonRolDel.setVisible(false);
                
            
        } catch (ErrorInesperado ex) {
            Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
        }




    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        try{
            listRoles = ObservableCollections.observableList(rolAction.findAll());
            try{
                listFuncionalidades =  ObservableCollections.observableList(funAction.findAll());
                try{
                    listUsuarios = ObservableCollections.observableList(usuAction.findAll());
                    listFuncionalidadesRol = ObservableCollections.observableList(this.rol.getFuncionalidades());
                    listUsuariosRol = ObservableCollections.observableList(this.rol.getUsuarios());
                    jPanelRoles = new javax.swing.JPanel();
                    jScrollPane1 = new javax.swing.JScrollPane();
                    jTableRoles = new javax.swing.JTable();
                    jTextFieldRolNuevo = new javax.swing.JTextField();
                    jButtonRolDel = new javax.swing.JButton();
                    jButtonRolAdd = new javax.swing.JButton();
                    jPanelUsuarios = new javax.swing.JPanel();
                    jScrollPane2 = new javax.swing.JScrollPane();
                    jTableUsu = new javax.swing.JTable();
                    jButtonQuitarUsuario = new javax.swing.JButton();
                    jButtonAsignarUsuario = new javax.swing.JButton();
                    jScrollPane5 = new javax.swing.JScrollPane();
                    jTableUsuRol = new javax.swing.JTable();
                    jButtonAddUsuario = new javax.swing.JButton();
                    jButtonEditUsuario = new javax.swing.JButton();
                    jPanelFuncionalidades = new javax.swing.JPanel();
                    jScrollPane3 = new javax.swing.JScrollPane();
                    jTableFunc = new javax.swing.JTable();
                    jButtorAsignarFuncionalidad = new javax.swing.JButton();
                    jButtonQuitarFuncionalidad = new javax.swing.JButton();
                    jScrollPane4 = new javax.swing.JScrollPane();
                    jTableFuncRol = new javax.swing.JTable();
                    jButtonAddFunc = new javax.swing.JButton();
                    jButtonEditlFunc = new javax.swing.JButton();
                    jTextFieldFuncNuevo = new javax.swing.JTextField();
                    jLabel1 = new javax.swing.JLabel();
                    jLabel3 = new javax.swing.JLabel();
                    jLabel4 = new javax.swing.JLabel();
                    jSeparator1 = new javax.swing.JSeparator();
                    jLabel5 = new javax.swing.JLabel();
                    jButtonAbout = new javax.swing.JButton();
                    jButtonAyuda = new javax.swing.JButton();

                } catch (ErrorInesperado ei) {
                    JOptionPane.showMessageDialog(null, "Verfique con el administrador la conexi√≥n a la base de datos y vuelva a intentar.", "Error", JOptionPane.ERROR_MESSAGE);
                    System.exit(-1);
                }

            } catch (ErrorInesperado ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (ErrorInesperado ex) {
            Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
        }

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seguridad del Sistema");
        setMaximumSize(new java.awt.Dimension(900, 590));
        setMinimumSize(new java.awt.Dimension(900, 300));
        setPreferredSize(new java.awt.Dimension(900, 590));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanelRoles.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelRoles.setLayout(null);

        jTableRoles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listRoles, jTableRoles);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Lista de Roles");
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableRoles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRolesMouseClicked(evt);
            }
        });
        jTableRoles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableRolesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableRoles);

        jPanelRoles.add(jScrollPane1);
        jScrollPane1.setBounds(20, 30, 260, 190);
        jPanelRoles.add(jTextFieldRolNuevo);
        jTextFieldRolNuevo.setBounds(20, 10, 170, 10);

        jButtonRolDel.setText("-");
        jPanelRoles.add(jButtonRolDel);
        jButtonRolDel.setBounds(240, 10, 50, 10);

        jButtonRolAdd.setText("+");
        jButtonRolAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRolAddActionPerformed(evt);
            }
        });
        jPanelRoles.add(jButtonRolAdd);
        jButtonRolAdd.setBounds(190, 10, 50, 10);

        getContentPane().add(jPanelRoles);
        jPanelRoles.setBounds(10, 50, 300, 240);

        jPanelUsuarios.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelUsuarios.setLayout(null);

        jTableUsu.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listUsuarios, jTableUsu);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Lista de Usuarios");
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(jTableUsu);

        jPanelUsuarios.add(jScrollPane2);
        jScrollPane2.setBounds(10, 30, 210, 200);

        jButtonQuitarUsuario.setText("<-- Quitar");
        jButtonQuitarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarUsuarioActionPerformed(evt);
            }
        });
        jPanelUsuarios.add(jButtonQuitarUsuario);
        jButtonQuitarUsuario.setBounds(230, 110, 100, 23);

        jButtonAsignarUsuario.setText("Asignar -->");
        jButtonAsignarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAsignarUsuarioActionPerformed(evt);
            }
        });
        jPanelUsuarios.add(jButtonAsignarUsuario);
        jButtonAsignarUsuario.setBounds(230, 80, 100, 23);

        jTableUsuRol.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listUsuariosRol, jTableUsuRol);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Usuarios del Rol");
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane5.setViewportView(jTableUsuRol);

        jPanelUsuarios.add(jScrollPane5);
        jScrollPane5.setBounds(340, 30, 210, 200);

        jButtonAddUsuario.setText("+");
        jButtonAddUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUsuarioActionPerformed(evt);
            }
        });
        jPanelUsuarios.add(jButtonAddUsuario);
        jButtonAddUsuario.setBounds(10, 5, 50, 23);

        jButtonEditUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/edit.png"))); // NOI18N
        jButtonEditUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditUsuarioActionPerformed(evt);
            }
        });
        jPanelUsuarios.add(jButtonEditUsuario);
        jButtonEditUsuario.setBounds(60, 5, 50, 23);

        getContentPane().add(jPanelUsuarios);
        jPanelUsuarios.setBounds(330, 50, 560, 240);

        jPanelFuncionalidades.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelFuncionalidades.setLayout(null);

        jTableFunc.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listFuncionalidades, jTableFunc);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Lista de Funcionalidades");
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane3.setViewportView(jTableFunc);

        jPanelFuncionalidades.add(jScrollPane3);
        jScrollPane3.setBounds(10, 60, 210, 180);

        jButtorAsignarFuncionalidad.setText("Asignar -->");
        jButtorAsignarFuncionalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtorAsignarFuncionalidadActionPerformed(evt);
            }
        });
        jPanelFuncionalidades.add(jButtorAsignarFuncionalidad);
        jButtorAsignarFuncionalidad.setBounds(230, 90, 100, 23);

        jButtonQuitarFuncionalidad.setText("<-- Quitar");
        jButtonQuitarFuncionalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarFuncionalidadActionPerformed(evt);
            }
        });
        jPanelFuncionalidades.add(jButtonQuitarFuncionalidad);
        jButtonQuitarFuncionalidad.setBounds(230, 120, 100, 23);

        jTableFuncRol.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listFuncionalidadesRol, jTableFuncRol);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Funcionalidades del Rol");
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane4.setViewportView(jTableFuncRol);

        jPanelFuncionalidades.add(jScrollPane4);
        jScrollPane4.setBounds(340, 60, 210, 180);

        jButtonAddFunc.setText("+");
        jButtonAddFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddFuncActionPerformed(evt);
            }
        });
        jPanelFuncionalidades.add(jButtonAddFunc);
        jButtonAddFunc.setBounds(10, 5, 50, 23);

        jButtonEditlFunc.setText("-");
        jButtonEditlFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditlFuncActionPerformed(evt);
            }
        });
        jPanelFuncionalidades.add(jButtonEditlFunc);
        jButtonEditlFunc.setBounds(60, 5, 50, 23);
        jPanelFuncionalidades.add(jTextFieldFuncNuevo);
        jTextFieldFuncNuevo.setBounds(10, 37, 210, 20);

        jLabel1.setText("Funcionalidades");
        jPanelFuncionalidades.add(jLabel1);
        jLabel1.setBounds(130, 10, 200, 14);

        getContentPane().add(jPanelFuncionalidades);
        jPanelFuncionalidades.setBounds(330, 310, 560, 250);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SEGURIDAD DEL SISTEMA");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 4, 890, 20);

        jLabel4.setText("Usuarios");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(330, 30, 120, 14);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 22, 890, 10);

        jLabel5.setText("Roles");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 30, 50, 14);

        jButtonAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/icon_about.png"))); // NOI18N
        jButtonAbout.setToolTipText("Acerca de...");
        jButtonAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAboutActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAbout);
        jButtonAbout.setBounds(850, 0, 20, 20);

        jButtonAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/help.jpeg"))); // NOI18N
        jButtonAyuda.setToolTipText("Ayuda");
        jButtonAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAyudaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAyuda);
        jButtonAyuda.setBounds(870, 0, 20, 20);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRolAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRolAddActionPerformed
        // TODO add your handling code here:
        if (jTextFieldRolNuevo.getText() != null && !jTextFieldRolNuevo.getText().equals("")) {
            try {
                if (rolAction.existeNombre(jTextFieldRolNuevo.getText().toUpperCase())) {
                    JOptionPane.showMessageDialog(null, "Rol ya Existe.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                Rol rol = new Rol();
                rol.setNombre(jTextFieldRolNuevo.getText().toUpperCase());
                rol.setDescripcion(jTextFieldRolNuevo.getText());
                rolAction.setEntity(rol);
                rolAction.crear();
                JOptionPane.showMessageDialog(this, "Se ha creado con √©xito", "Info", 1);
                listRoles.clear();
                listRoles.addAll(rolAction.findAll());

                listFuncionalidadesRol.clear();
                listUsuariosRol.clear();

            } catch (EntidadExiste ex) {
                JOptionPane.showMessageDialog(null, "ROL YA EXISTE.", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (ErrorInesperado ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            JOptionPane.showMessageDialog(null, "Ingrese Nombre del rol.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonRolAddActionPerformed

    private void jTableRolesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRolesMouseClicked
        // TODO add your handling code here:
        actualizarFuncUsers();
    }//GEN-LAST:event_jTableRolesMouseClicked

    private void actualizarFuncUsers() {
        if (jTableRoles.getSelectedRow() >= 0) {
            listUsuarios.clear();
            listFuncionalidades.clear();
            listUsuarios.addAll(usuariosTodos);
            listFuncionalidades.addAll(funcionalidadesTodos);

            rol = (Rol) listRoles.get(jTableRoles.getSelectedRow());

            listUsuariosRol.clear();
            listUsuariosRol.addAll(rol.getUsuarios());

            listFuncionalidadesRol.clear();
            listFuncionalidadesRol.addAll(rol.getFuncionalidades());

            for (int i = 0; i < listFuncionalidadesRol.size(); i++) {
                Object object = listFuncionalidadesRol.get(i);
                if (listFuncionalidades.contains(object)) {
                    listFuncionalidades.remove(object);
                }
            }

        }
    }

    private void jButtonAsignarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAsignarUsuarioActionPerformed
        // TODO add your handling code here:
        if (jTableUsu.getSelectedRow() >= 0 && rol.getId() != null) {
            Usuario usu = (Usuario) listUsuarios.get(jTableUsu.getSelectedRow());
            
            if (listUsuariosRol.contains(usu)) {
                    JOptionPane.showMessageDialog(null, "Usuario ya fue asignado.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
            }
                       
            if (JOptionPane.showConfirmDialog(this, "Desea Asignar Rol: " + rol.getNombre() + " al Usuario: " + usu.getNombre() + " ?", "Asignar Usuario", 0) != 0) {
                return;
            }
            
            try {

                usu.getRoles().add(rol);
                usuAction.setEntity(usu);
                usuAction.guardar();
                rol.getUsuarios().add(usu);

                JOptionPane.showMessageDialog(this, "Se ha asignado con exito", "Info", 1);
                actualizarFuncUsers();


            } catch (EntidadExiste ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ErrorInesperado ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            }


        }

    }//GEN-LAST:event_jButtonAsignarUsuarioActionPerformed

    private void jButtorAsignarFuncionalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtorAsignarFuncionalidadActionPerformed
        // TODO add your handling code here:
        if (jTableFunc.getSelectedRow() >= 0 && rol.getId() != null) {
            try {
                Funcionalidad fun = (Funcionalidad) listFuncionalidades.get(jTableFunc.getSelectedRow());
                if (JOptionPane.showConfirmDialog(this, "Desea Asignar la Funcionalidad: " + fun.getNombre() + " al Rol: " + rol.getNombre() + " ?", "Asignar Funcionalidad", 0) != 0) {
                    return;
                }
                fun.getRoles().add(rol);
                funAction.setEntity(fun);
                funAction.guardar();
                rol.getFuncionalidades().add(fun);
               
                JOptionPane.showMessageDialog(this, "Se ha asignado con exito", "Info", 1);
                actualizarFuncUsers();

            } catch (EntidadExiste ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ErrorInesperado ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButtorAsignarFuncionalidadActionPerformed

    private void jButtonQuitarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarUsuarioActionPerformed
        // TODO add your handling code here:
        if (jTableUsuRol.getSelectedRow() >= 0 && rol.getId() != null) {
            try {
                Usuario usu = (Usuario) listUsuariosRol.get(jTableUsuRol.getSelectedRow());
                if (JOptionPane.showConfirmDialog(this, "Desea Quitar el Rol: " + rol.getNombre() + " al Usuario: " + usu.getNombre() + " ?", "Quitar Rol", 0) != 0) {
                    return;
                }
                if (rol.getNombre().contains("SEGURIDAD SISTEMA") && rol.getUsuarios().size()==1 ) {
                    JOptionPane.showMessageDialog(null, "Debe haber 1 usuario en ROL: SEGURIDAD SISTEMA.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                
                usu.getRoles().remove(rol);
                usuAction.setEntity(usu);
                usuAction.guardar();
                rol.getUsuarios().remove(usu);

                JOptionPane.showMessageDialog(this, "Se ha quitado con Exito", "Info", 1);
                actualizarFuncUsers();

            } catch (EntidadExiste ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ErrorInesperado ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            }


        }

    }//GEN-LAST:event_jButtonQuitarUsuarioActionPerformed

    private void jButtonQuitarFuncionalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarFuncionalidadActionPerformed
        // TODO add your handling code here:
        if (jTableFuncRol.getSelectedRow() >= 0 && rol.getId() != null) {
            try {
                Funcionalidad fun = (Funcionalidad) listFuncionalidadesRol.get(jTableFuncRol.getSelectedRow());
                if (JOptionPane.showConfirmDialog(this, "Desea Quitar la funcionalidad: " + fun.getNombre() + " al Rol: " + rol.getNombre() + " ?", "Quitar Funcionalidad", 0) != 0) {
                    return;
                }
                                
                fun.getRoles().remove(rol);
                funAction.setEntity(fun);
                funAction.guardar();
                rol.getFuncionalidades().remove(fun);
                
                JOptionPane.showMessageDialog(this, "Se ha quitado con Exito", "Info", 1);

                actualizarFuncUsers();

            } catch (EntidadExiste ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ErrorInesperado ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            }


        }
    }//GEN-LAST:event_jButtonQuitarFuncionalidadActionPerformed

    private void jButtonAddFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddFuncActionPerformed
        // TODO add your handling code here:
        if (jTextFieldFuncNuevo.getText() != null && !jTextFieldFuncNuevo.getText().equals("")) {
            try {
                if (funAction.existeNombre(jTextFieldFuncNuevo.getText().toUpperCase())) {
                    JOptionPane.showMessageDialog(null, "Funcionalidad ya existe.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                Funcionalidad fun = new Funcionalidad();
                fun.setNombre(jTextFieldFuncNuevo.getText().toUpperCase());
                fun.setDescripcion(jTextFieldFuncNuevo.getText().toUpperCase());
                funAction.setEntity(fun);
                funAction.crear();
                JOptionPane.showMessageDialog(this, "Se ha creado con √©xito", "Info", 1);
                postClear();

            } catch (EntidadExiste ex) {
                JOptionPane.showMessageDialog(null, "ROL YA EXISTE.", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (ErrorInesperado ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            JOptionPane.showMessageDialog(null, "Ingrese Nombre de la funcionalidad.", "Error", JOptionPane.ERROR_MESSAGE);
        
        }
    }//GEN-LAST:event_jButtonAddFuncActionPerformed
    private void postClear(){
        try {
            
            listFuncionalidadesRol.clear();
            listUsuariosRol.clear();
            listFuncionalidades.clear();
            listUsuarios.clear();
            listRoles.clear();
            
            usuariosTodos = usuAction.findAll();
            funcionalidadesTodos = funAction.findAll();
            listRoles.addAll(rolAction.findAll());
            jTableRoles.setRowSelectionInterval(0,0);
            actualizarFuncUsers();
        } catch (ErrorInesperado ex) {
            Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        if (listRoles.size() > 0) {
            jTableRoles.setRowSelectionInterval(0, 0);
            actualizarFuncUsers();
        }

    }//GEN-LAST:event_formWindowActivated

    private void jTableRolesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableRolesKeyReleased
        // TODO add your handling code here:
        actualizarFuncUsers();
    }//GEN-LAST:event_jTableRolesKeyReleased

    private void jButtonAddUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUsuarioActionPerformed
        // TODO add your handling code here:
        JDialogUsuario diUsu = new JDialogUsuario(null, true);
        WindowUtil.centerWindow(diUsu);
        diUsu.setVisible(true);
        postClear();
        
        
                
    }//GEN-LAST:event_jButtonAddUsuarioActionPerformed

    private void jButtonEditUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditUsuarioActionPerformed
        // TODO add your handling code here:
           if (jTableUsu.getSelectedRow() >= 0 && rol.getId() != null) {
               Usuario usu = (Usuario) listUsuarios.get(jTableUsu.getSelectedRow());
                JDialogUsuario diUsu = new JDialogUsuario(null, true);
                diUsu.setUsuario(usu);
                 WindowUtil.centerWindow(diUsu);
                diUsu.setVisible(true);
                postClear();
           }
        
    }//GEN-LAST:event_jButtonEditUsuarioActionPerformed

    private void jButtonEditlFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditlFuncActionPerformed
        // TODO add your handling code here:
        if (jTableFunc.getSelectedRow() >= 0 && rol.getId() != null) {
                Funcionalidad fun = (Funcionalidad) listFuncionalidades.get(jTableFunc.getSelectedRow());
                if (fun.getRoles()!=null && fun.getRoles().size()>0) {
                    JOptionPane.showMessageDialog(null, "No se puede eliminar la funcionalidad porque est√° asociada a Roles.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                    
                }
                if (JOptionPane.showConfirmDialog(this, "Desea Eliminar la Funcionalidad: " + fun.getNombre() + " al Rol: " + rol.getNombre() + " ?", "Asignar Funcionalidad", 0) != 0) {
                    return;
                }
            try {
                funAction.setEntity(fun);
                funAction.eliminar();
                postClear();
            } catch (ErrorInesperado ex) {
                Logger.getLogger(JDialogSeguridadMant.class.getName()).log(Level.SEVERE, null, ex);
            }
                
                JOptionPane.showMessageDialog(this, "Se ha eliminado con exito", "Info", 1);
                actualizarFuncUsers();
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione la funcionalidad.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEditlFuncActionPerformed

    private void jButtonAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAboutActionPerformed
        // TODO add your handling code here:
        JDialogAbout about = new JDialogAbout(null, true);
        WindowUtil.centerWindow(about);
        about.setVisible(true);
    }//GEN-LAST:event_jButtonAboutActionPerformed

    private void jButtonAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAyudaActionPerformed
        // TODO add your handling code here:
        if (Desktop.isDesktopSupported()) {
            try {
                java.io.File file = new java.io.File("");   //Dummy file
                String abspath = file.getAbsolutePath();
                File myFile = new File(abspath + "/manuales/SCAModuloSeguridad.pdf");
                Desktop.getDesktop().open(myFile);
            } catch (IOException ex) {
                // no application registered for PDFs
                JOptionPane.showMessageDialog(null, "El manual no se encuentra, verifique con el administrador del sistema.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAyudaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogSeguridadMant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogSeguridadMant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogSeguridadMant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogSeguridadMant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogSeguridadMant dialog = new JDialogSeguridadMant(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbout;
    private javax.swing.JButton jButtonAddFunc;
    private javax.swing.JButton jButtonAddUsuario;
    private javax.swing.JButton jButtonAsignarUsuario;
    private javax.swing.JButton jButtonAyuda;
    private javax.swing.JButton jButtonEditUsuario;
    private javax.swing.JButton jButtonEditlFunc;
    private javax.swing.JButton jButtonQuitarFuncionalidad;
    private javax.swing.JButton jButtonQuitarUsuario;
    private javax.swing.JButton jButtonRolAdd;
    private javax.swing.JButton jButtonRolDel;
    private javax.swing.JButton jButtorAsignarFuncionalidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelFuncionalidades;
    private javax.swing.JPanel jPanelRoles;
    private javax.swing.JPanel jPanelUsuarios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableFunc;
    private javax.swing.JTable jTableFuncRol;
    private javax.swing.JTable jTableRoles;
    private javax.swing.JTable jTableUsu;
    private javax.swing.JTable jTableUsuRol;
    private javax.swing.JTextField jTextFieldFuncNuevo;
    private javax.swing.JTextField jTextFieldRolNuevo;
    private java.util.List listFuncionalidades;
    private java.util.List listFuncionalidadesRol;
    private java.util.List listRoles;
    private java.util.List listUsuarios;
    private java.util.List listUsuariosRol;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
