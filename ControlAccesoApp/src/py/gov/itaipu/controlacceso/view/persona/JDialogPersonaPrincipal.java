/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package py.gov.itaipu.controlacceso.view.persona;

import java.awt.Dialog;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import py.gov.itaipu.controlacceso.action.CRUDAction;
import py.gov.itaipu.controlacceso.action.persona.PersonaAction;
import py.gov.itaipu.controlacceso.model.Nacionalidad;
import py.gov.itaipu.controlacceso.model.Persona;
import py.gov.itaipu.controlacceso.model.TipoDocumento;
import py.gov.itaipu.controlacceso.persistence.EntityManagerCA;
import org.jdesktop.observablecollections.ObservableCollections;
import py.gov.itaipu.controlacceso.model.Organizacion;
import py.gov.itaipu.controlacceso.model.exception.ErrorInesperado;
import py.gov.itaipu.controlacceso.utils.windows.WindowUtil;
import py.gov.itaipu.controlacceso.view.JDialogBuscador;
import py.gov.itaipu.controlacceso.view.TimeRenderer;
import py.gov.itaipu.controlacceso.view.administracion.organizacion.JInternalFrameOrganizacion;
import py.gov.itaipu.controlacceso.view.administracion.organizacion.JInternalFrameOrganizacionExterna;
import py.gov.itaipu.controlacceso.view.administracion.parametrogeneral.JDialogTipoDocumento;
import py.gov.itaipu.controlacceso.view.administracion.parametrogeneral.JDialogoNacionalidad;

/**
 *
 * @author fboy
 */
public class JDialogPersonaPrincipal extends javax.swing.JDialog {

    private PersonaAction personaAction;
    private Persona personaFiltro;
    private Persona personaFiltro2;
    private CRUDAction<Nacionalidad> nacionalidadAction;
    private CRUDAction<TipoDocumento> tipoDocAction;
    private TableCellRenderer rendererTime;
    private Boolean modoBuscador;
    private Persona personaSeleccionada;
    private String tipoOrganizacionPersona;

    /**
     * Creates new form JDialogPersonaPrincipal
     */
    public JDialogPersonaPrincipal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        tipoOrganizacionPersona = "EXTERNA";
        personaAction = new PersonaAction(new Persona());
        nacionalidadAction = new CRUDAction(new Nacionalidad());
        tipoDocAction = new CRUDAction(new TipoDocumento());
        personaFiltro = new Persona();
        personaFiltro2 = new Persona();
        rendererTime = new TimeRenderer("dd/MM/yyyy");
        modoBuscador = false;
        initComponents();
        jButtonEliminar.setVisible(false);
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/resource/img/bandera-paraguay.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        try{
            listNacionalidades = nacionalidadAction.findAll();
            Nacionalidad nac = new Nacionalidad();
            nac.setNombre("TODAS");
            listNacionalidades.add(0,nac);
        } catch (ErrorInesperado ei) {
            JOptionPane.showMessageDialog(null, "Verfique con el administrador la conexión a la base de datos y vuelva a intentar.", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
        try{
            listTipoDocumento = tipoDocAction.findAll();
            TipoDocumento tD = new TipoDocumento();
            tD.setNombre("TODOS");
            listTipoDocumento.add(0,tD);
        } catch (ErrorInesperado ei) {
            JOptionPane.showMessageDialog(null, "Verfique con el administrador la conexión a la base de datos y vuelva a intentar.", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
        listPersonas = ObservableCollections.observableList(new ArrayList<Persona>());
        buttonGroupTipoPersona = new javax.swing.ButtonGroup();
        jLabelEstCivil = new javax.swing.JLabel();
        jLabelEstNacionalidad = new javax.swing.JLabel();
        jButtonBuscarOrganizacion = new javax.swing.JButton();
        jTextFieldOrganizacionFiltro = new javax.swing.JTextField();
        jLabelOrganizacion = new javax.swing.JLabel();
        jButtonVer = new javax.swing.JButton();
        jButtonImprimirListado = new javax.swing.JButton();
        jLabelSexo = new javax.swing.JLabel();
        jButtonImprimirFicha = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jComboBoxSexo = new javax.swing.JComboBox();
        jButtonBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonas = new javax.swing.JTable();
        jComboBoxNacionalidad = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        jTextFieldNombreFiltro = new javax.swing.JTextField();
        jButtonNuevo = new javax.swing.JButton();
        jTextFieldApellidoFiltro = new javax.swing.JTextField();
        jButtonModificar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxEstadoCivil = new javax.swing.JComboBox();
        jLabelNombre = new javax.swing.JLabel();
        jLabelApellido = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFechDesde = new javax.swing.JFormattedTextField();
        jFormattedTextFechHasta = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxTipoDoc = new javax.swing.JComboBox();
        jTextFieldNroDoc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REGISTRO DE VISITANTES");
        getContentPane().setLayout(null);

        jLabelEstCivil.setText("Estado Civil:");
        getContentPane().add(jLabelEstCivil);
        jLabelEstCivil.setBounds(420, 70, 90, 14);

        jLabelEstNacionalidad.setText("Nacionalidad:");
        getContentPane().add(jLabelEstNacionalidad);
        jLabelEstNacionalidad.setBounds(420, 100, 90, 14);

        jButtonBuscarOrganizacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/view.png"))); // NOI18N
        jButtonBuscarOrganizacion.setToolTipText("Buscar Organizacion");
        jButtonBuscarOrganizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarOrganizacionActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBuscarOrganizacion);
        jButtonBuscarOrganizacion.setBounds(980, 100, 20, 20);

        jTextFieldOrganizacionFiltro.setEditable(false);
        getContentPane().add(jTextFieldOrganizacionFiltro);
        jTextFieldOrganizacionFiltro.setBounds(830, 100, 150, 22);

        jLabelOrganizacion.setText("Organizacion:");
        getContentPane().add(jLabelOrganizacion);
        jLabelOrganizacion.setBounds(690, 100, 120, 14);

        jButtonVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/view.png"))); // NOI18N
        jButtonVer.setText("VER");
        jButtonVer.setPreferredSize(new java.awt.Dimension(110, 25));
        jButtonVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVer);
        jButtonVer.setBounds(640, 240, 125, 25);

        jButtonImprimirListado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/printer.png"))); // NOI18N
        jButtonImprimirListado.setText("LISTADO");
        jButtonImprimirListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirListadoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonImprimirListado);
        jButtonImprimirListado.setBounds(270, 180, 120, 25);

        jLabelSexo.setText("Sexo:");
        getContentPane().add(jLabelSexo);
        jLabelSexo.setBounds(420, 130, 90, 14);

        jButtonImprimirFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/ficha.png"))); // NOI18N
        jButtonImprimirFicha.setText("IMPRIMIR");
        jButtonImprimirFicha.setPreferredSize(new java.awt.Dimension(110, 25));
        jButtonImprimirFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirFichaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonImprimirFicha);
        jButtonImprimirFicha.setBounds(1030, 240, 125, 25);

        jButtonLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/clear.jpeg"))); // NOI18N
        jButtonLimpiar.setText("LIMPIAR");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonLimpiar);
        jButtonLimpiar.setBounds(140, 180, 120, 25);

        jComboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS", "MASCULINO", "FEMENINO" }));
        getContentPane().add(jComboBoxSexo);
        jComboBoxSexo.setBounds(520, 130, 150, 22);

        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/view.png"))); // NOI18N
        jButtonBuscar.setText("BUSCAR");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBuscar);
        jButtonBuscar.setBounds(10, 180, 120, 25);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listPersonas, jTablePersonas);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${apellido}"));
        columnBinding.setColumnName("Apellido");
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoDocumento.nombre}"));
        columnBinding.setColumnName("Tipo Doc");
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numeroDocumento}"));
        columnBinding.setColumnName("Nro Documento");
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nacionalidad.nombre}"));
        columnBinding.setColumnName("Nacionalidad");
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaNacimiento}"));
        columnBinding.setColumnName("Fecha Nac");
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${organizacion.nombre}"));
        columnBinding.setColumnName("Organizacion");
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTablePersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePersonasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePersonas);
        jTablePersonas.getColumnModel().getColumn(0).setResizable(false);
        jTablePersonas.getColumnModel().getColumn(4).setResizable(false);
        jTablePersonas.getColumnModel().getColumn(5).setCellRenderer(rendererTime);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 272, 1150, 309);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listNacionalidades, jComboBoxNacionalidad);
        bindingGroup.addBinding(jComboBoxBinding);

        getContentPane().add(jComboBoxNacionalidad);
        jComboBoxNacionalidad.setBounds(520, 100, 150, 22);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(10, 230, 1150, 10);
        getContentPane().add(jTextFieldNombreFiltro);
        jTextFieldNombreFiltro.setBounds(130, 70, 150, 22);

        jButtonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/new.jpg"))); // NOI18N
        jButtonNuevo.setText("NUEVO");
        jButtonNuevo.setPreferredSize(new java.awt.Dimension(110, 25));
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonNuevo);
        jButtonNuevo.setBounds(770, 240, 125, 25);
        getContentPane().add(jTextFieldApellidoFiltro);
        jTextFieldApellidoFiltro.setBounds(130, 100, 150, 22);

        jButtonModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/edit.png"))); // NOI18N
        jButtonModificar.setText("MODIFICAR");
        jButtonModificar.setPreferredSize(new java.awt.Dimension(110, 25));
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModificar);
        jButtonModificar.setBounds(900, 240, 125, 25);

        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/img/delete.png"))); // NOI18N
        jButtonEliminar.setText("ELIMINAR");
        jButtonEliminar.setPreferredSize(new java.awt.Dimension(110, 25));
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEliminar);
        jButtonEliminar.setBounds(1040, 590, 110, 25);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("Criterios de búsqueda.");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 23, 150, 15);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("Lista de Personas.");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 210, 130, 15);

        jComboBoxEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS", "SOLTERO", "CASADO", "DIVORCIADO", "VIUDO" }));
        getContentPane().add(jComboBoxEstadoCivil);
        jComboBoxEstadoCivil.setBounds(520, 70, 150, 22);

        jLabelNombre.setText("Nombre:");
        getContentPane().add(jLabelNombre);
        jLabelNombre.setBounds(10, 70, 92, 14);

        jLabelApellido.setText("Apellido:");
        getContentPane().add(jLabelApellido);
        jLabelApellido.setBounds(10, 100, 94, 14);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(10, 43, 1150, 10);

        jLabel3.setText("Fecha Nacimiento");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(690, 70, 110, 23);

        jFormattedTextFechDesde.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM))));
        getContentPane().add(jFormattedTextFechDesde);
        jFormattedTextFechDesde.setBounds(830, 70, 150, 22);

        jFormattedTextFechHasta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        getContentPane().add(jFormattedTextFechHasta);
        jFormattedTextFechHasta.setBounds(1010, 70, 150, 22);

        jLabel4.setText("De:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(800, 70, 20, 23);

        jLabel5.setText("A:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(990, 70, 11, 23);

        jLabel6.setText("Número de Doc:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 130, 110, 23);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listTipoDocumento, jComboBoxTipoDoc);
        bindingGroup.addBinding(jComboBoxBinding);

        getContentPane().add(jComboBoxTipoDoc);
        jComboBoxTipoDoc.setBounds(290, 130, 80, 22);
        getContentPane().add(jTextFieldNroDoc);
        jTextFieldNroDoc.setBounds(130, 130, 150, 22);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarOrganizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarOrganizacionActionPerformed
        // TODO add your handling code here:
        JInternalFrameOrganizacion jFrameOrganizacion = new JInternalFrameOrganizacion();
        jFrameOrganizacion.setModoBuscador(true);
        jFrameOrganizacion.setVisible(true);
        JDialogBuscador buscador = new JDialogBuscador(null, true);
        buscador.setSize(jFrameOrganizacion.getSize());
        jFrameOrganizacion.setClosable(false);
        jFrameOrganizacion.setResizable(false);
        jFrameOrganizacion.setTitle("Buscador de organizaciones");
        buscador.getjDesktopPaneBuscador().add(jFrameOrganizacion);
        WindowUtil.centerWindow(buscador);
        buscador.setVisible(true);
        if (jFrameOrganizacion.getOrganizacionSeleccionada() != null) {
            personaFiltro.setOrganizacion(jFrameOrganizacion.getOrganizacionSeleccionada());
        }
        if (personaFiltro.getOrganizacion()!=null) {
            jTextFieldOrganizacionFiltro.setText(personaFiltro.getOrganizacion().getNombre());    
        }
        
    }//GEN-LAST:event_jButtonBuscarOrganizacionActionPerformed

    private void jButtonVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerActionPerformed
        // TODO add your handling code here:
        if (jTablePersonas.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Persona", "Error", 0);
            return;
        }

        Persona p = (Persona) listPersonas.get(jTablePersonas.getSelectedRow());
        JDialogPersona dialogPersona = new JDialogPersona(null, true);
        dialogPersona.setSize(1060, 460);
        WindowUtil.centerWindow(dialogPersona); 
        dialogPersona.setPersona(p);
        dialogPersona.setReadOnly(true);
        dialogPersona.cargarDatospersona();
        dialogPersona.setVisible(true);
    }//GEN-LAST:event_jButtonVerActionPerformed

    private void jButtonImprimirListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirListadoActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {

            Class.forName("org.postgresql.Driver");
            Connection conexion = EntityManagerCA.getConexion();
            JasperReport reporte = (JasperReport) JRLoader.loadObject("reports/reporteListadoPersonas.jasper");
            //Parametros
            Map<String, Object> parametros = new HashMap<String, Object>();
            ///Parametros
            if (jTextFieldNombreFiltro.getText() != null && !jTextFieldNombreFiltro.getText().equals("")) {
                parametros.put("pNombre", (Object) jTextFieldNombreFiltro.getText().toUpperCase());
            }

            if (jTextFieldApellidoFiltro.getText() != null && !jTextFieldApellidoFiltro.getText().equals("")) {
                parametros.put("pApellido", (Object) jTextFieldApellidoFiltro.getText().toUpperCase());
            }
            if (personaFiltro.getOrganizacion() != null && personaFiltro.getOrganizacion().getId() != null) {
                parametros.put("pOrganizacionText", (Object) personaFiltro.getOrganizacion().getNombre().toUpperCase());
                parametros.put("pOrganizacion", (Object) personaFiltro.getOrganizacion().getId().intValue());
            }

            if (jComboBoxNacionalidad.getSelectedIndex() != 0) {
                Nacionalidad nac = (Nacionalidad) jComboBoxNacionalidad.getSelectedItem();
                parametros.put("pNacionalidadText", (Object) nac.getNombre().toUpperCase());
                parametros.put("pNacionalidadId", (Object) nac.getId().intValue());
            }
            if (jComboBoxTipoDoc.getSelectedIndex() != 0) {
                TipoDocumento tD = (TipoDocumento) jComboBoxTipoDoc.getSelectedItem();
                parametros.put("pTipoDocText", (Object) tD.getNombre().toUpperCase());
                parametros.put("pTipoDoc", (Object) tD.getId().intValue());
            }
            if (jTextFieldNroDoc.getText() != null && !jTextFieldNroDoc.getText().equals("")) {
                parametros.put("pNroDoc", (Object) jTextFieldNroDoc.getText().toUpperCase());
            }
            if (jComboBoxEstadoCivil.getSelectedIndex() != 0) {
                parametros.put("pEstadoCivil", (Object) jComboBoxEstadoCivil.getSelectedItem().toString());
            }

            if (jComboBoxSexo.getSelectedIndex() != 0) {
                parametros.put("pSexo", (Object) jComboBoxSexo.getSelectedItem().toString());
            }
//            if (!jRadioButtonAmbos.isSelected()) {
//                if (jRadioButtonInterna.isSelected()) {
//                    parametros.put("pTipoOrg", (Object) "INTERNA");
//                } else if (jRadioButtonExterna.isSelected()) {
//                    parametros.put("pTipoOrg", (Object) "EXTERNA");
//                }
//            }

            if (jFormattedTextFechDesde != null && !jFormattedTextFechDesde.getText().equals("")) {
                String vFecha = jFormattedTextFechDesde.getText().substring(6, 10) + jFormattedTextFechDesde.getText().substring(3, 5) + jFormattedTextFechDesde.getText().substring(0, 2);
                parametros.put("pFechaDesde", (Object) vFecha.toUpperCase());
                vFecha = vFecha.substring(6, 8) + "/" + vFecha.substring(4, 6) + "/" + vFecha.substring(0, 4);
                parametros.put("pFechaDesdeText", (Object) vFecha.toUpperCase());
            }

            if (jFormattedTextFechHasta != null && !jFormattedTextFechHasta.getText().equals("")) {
                String vFecha2 = jFormattedTextFechHasta.getText().substring(6, 10) + jFormattedTextFechHasta.getText().substring(3, 5) + jFormattedTextFechHasta.getText().substring(0, 2);
                parametros.put("pFechaHasta", (Object) vFecha2.toUpperCase());
                vFecha2 = vFecha2.substring(6, 8) + "/" + vFecha2.substring(4, 6) + "/" + vFecha2.substring(0, 4);
                parametros.put("pFechaHastaText", (Object) vFecha2.toUpperCase());
            }

            JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, parametros, conexion);

            //            Muestra el Reporte en Pantalla
            JasperViewer jviewer = new JasperViewer(jasperPrint, false);
            jviewer.setModalExclusionType(Dialog.ModalExclusionType.NO_EXCLUDE);
            jviewer.viewReport(jasperPrint, false);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JInternalFramePersona.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JInternalFramePersona.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(JInternalFramePersona.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonImprimirListadoActionPerformed

    private void jButtonImprimirFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirFichaActionPerformed
        // TODO add your handling code here:
        if (jTablePersonas.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Persona", "Error", 0);
            return;
        }
        Persona p = (Persona) listPersonas.get(jTablePersonas.getSelectedRow());
        try {

            Class.forName("org.postgresql.Driver");
            Connection conexion = EntityManagerCA.getConexion();
            JasperReport reporte = (JasperReport) JRLoader.loadObject("reports/reporteFichaPersona.jasper");
            //Parametros
            Map<String, Object> parametros = new HashMap<String, Object>();
            parametros.put("personaId", (Object) p.getId().intValue());
            //Paso el full path del proyecto al reporte para obtener las imagenes.
            java.io.File file = new java.io.File("");
            String abspath = file.getAbsolutePath() + "/";
            parametros.put("pathImagen", (Object) abspath);

            JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, parametros, conexion);

            //            Muestra el Reporte en Pantalla
            JasperViewer jviewer = new JasperViewer(jasperPrint, false);
            jviewer.setModalExclusionType(Dialog.ModalExclusionType.NO_EXCLUDE);
            jviewer.viewReport(jasperPrint, true);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JInternalFramePersona.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JInternalFramePersona.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(JInternalFramePersona.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonImprimirFichaActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        // TODO add your handling code here:
        try {
            jTextFieldNombreFiltro.setText(null);
            jTextFieldApellidoFiltro.setText(null);
            jTextFieldNroDoc.setText(null);
            jTextFieldOrganizacionFiltro.setText(null);
            jComboBoxEstadoCivil.setSelectedIndex(0);
            jComboBoxSexo.setSelectedIndex(0);
            jComboBoxTipoDoc.setSelectedIndex(0);
            jComboBoxNacionalidad.setSelectedIndex(0);
            jFormattedTextFechDesde.setText(null);
            jFormattedTextFechHasta.setText(null);
            if (!modoBuscador) {
//                jRadioButtonAmbos.setSelected(true);
            }

            personaFiltro = new Persona();
            personaFiltro2 = new Persona();
            listPersonas.clear();
            listPersonas.addAll(personaAction.findByParameters(personaFiltro, personaFiltro2, tipoOrganizacionPersona));
        } catch (ErrorInesperado ei) {
            JOptionPane.showMessageDialog(null, "Verfique con el administrador la conexión a la base de datos y vuelva a intentar.", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        try {
            if (jTextFieldNombreFiltro.getText() != null && !jTextFieldNombreFiltro.getText().equals("")) {
                personaFiltro.setNombre(jTextFieldNombreFiltro.getText().toUpperCase());
            }

            if (jTextFieldApellidoFiltro.getText() != null && !jTextFieldApellidoFiltro.getText().equals("")) {
                personaFiltro.setApellido(jTextFieldApellidoFiltro.getText().toUpperCase());
            }

            if (jTextFieldNroDoc.getText() != null && !jTextFieldNroDoc.getText().equals("")) {
                personaFiltro.setNumeroDocumento(jTextFieldNroDoc.getText().toUpperCase());
            }

            if (jFormattedTextFechDesde.getText() != null && !jFormattedTextFechDesde.getText().equals("")) {
                personaFiltro.setFechaNacimiento(((Date) jFormattedTextFechDesde.getValue()));
            }

            if (jFormattedTextFechHasta.getText() != null && !jFormattedTextFechHasta.getText().equals("")) {
                personaFiltro2.setFechaNacimiento(((Date) jFormattedTextFechHasta.getValue()));
            }

            Nacionalidad nac = (Nacionalidad) jComboBoxNacionalidad.getSelectedItem();
            if (nac.getId() != null) {
                personaFiltro.setNacionalidad((Nacionalidad) jComboBoxNacionalidad.getSelectedItem());
            } else {
                personaFiltro.setNacionalidad(null);
            }

            TipoDocumento tD = (TipoDocumento) jComboBoxTipoDoc.getSelectedItem();
            if (tD.getId() != null) {
                personaFiltro.setTipoDocumento(tD);
            } else {
                personaFiltro.setTipoDocumento(null);
            }

            if (!jComboBoxEstadoCivil.getSelectedItem().toString().equals("TODOS")) {
                personaFiltro.setEstadoCivil(jComboBoxEstadoCivil.getSelectedItem().toString());
            } else {
                personaFiltro.setEstadoCivil(null);
            }

            if (!jComboBoxSexo.getSelectedItem().toString().equals("TODOS")) {
                personaFiltro.setSexo(jComboBoxSexo.getSelectedItem().toString());
            } else {
                personaFiltro.setSexo(null);
            }

            String tipoPersona = "EXTERNA";
//        if (!jRadioButtonAmbos.isSelected()){
//            if (jRadioButtonInterna.isSelected()) {
//                tipoPersona="INTERNA";
//            }else if(jRadioButtonExterna.isSelected()){
//                tipoPersona="EXTERNA";
//            }
//        }

            Date fec1 = null;
            Date fec2 = null;
            if (jFormattedTextFechDesde.getText() != null && !jFormattedTextFechDesde.getText().equals("")) {

                fec1 = (Date) jFormattedTextFechDesde.getValue();
                Calendar cal = Calendar.getInstance(); // creates calendar
                cal.setTime(fec1); // sets calendar time/date
                cal.add(Calendar.HOUR_OF_DAY, 23);
                cal.add(Calendar.MINUTE, 59);
                cal.add(Calendar.SECOND, 59);
                fec1 = cal.getTime();
                personaFiltro.setFechaNacimiento(fec1);
            }

            if (jFormattedTextFechHasta.getText() != null && !jFormattedTextFechHasta.getText().equals("")) {

                fec2 = (Date) jFormattedTextFechHasta.getValue();
                Calendar cal = Calendar.getInstance(); // creates calendar
                cal.setTime(fec2); // sets calendar time/date
                cal.add(Calendar.HOUR_OF_DAY, 23);
                cal.add(Calendar.MINUTE, 59);
                cal.add(Calendar.SECOND, 59);
                fec2 = cal.getTime();
                personaFiltro2.setFechaNacimiento(fec2);
            }

            listPersonas.clear();
            listPersonas.addAll(personaAction.findByParameters(personaFiltro, personaFiltro2, tipoPersona));
        } catch (ErrorInesperado ei) {
            JOptionPane.showMessageDialog(null, "Verfique con el administrador la conexión a la base de datos y vuelva a intentar.", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        //         JDialogPersona dialogoNuevo = new JDialogPersona(null, closable);
        //         dialogoNuevo.setVisible(true);
        try {
            Persona p = new Persona();
            JDialogPersona dialogPersona = new JDialogPersona(null, true);
            dialogPersona.setSize(1060, 460);
            WindowUtil.centerWindow(dialogPersona);            
            dialogPersona.setPersona(p);            
            dialogPersona.setVisible(true);
            listPersonas.clear();
            listPersonas.addAll(personaAction.findByParameters(personaFiltro, personaFiltro2, tipoOrganizacionPersona));
        } catch (ErrorInesperado ei) {
            JOptionPane.showMessageDialog(null, "Verfique con el administrador la conexión a la base de datos y vuelva a intentar.", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    
    
    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
        try {
            if (jTablePersonas.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una Persona", "Error", 0);
                return;
            }
            Persona p = (Persona) listPersonas.get(jTablePersonas.getSelectedRow());
            JDialogPersona dialogPersona = new JDialogPersona(null, true);
             dialogPersona.setSize(1060, 460);
            WindowUtil.centerWindow(dialogPersona);
            dialogPersona.setPersona(p);
            dialogPersona.cargarDatospersona();           
            dialogPersona.setVisible(true);
            listPersonas.clear();
            listPersonas.addAll(personaAction.findByParameters(personaFiltro, personaFiltro2, tipoOrganizacionPersona));
        } catch (ErrorInesperado ei) {
            JOptionPane.showMessageDialog(null, "Verfique con el administrador la conexión a la base de datos y vuelva a intentar.", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        try {
            if (jTablePersonas.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una Persona", "Error", 0);
                return;
            }
            if (JOptionPane.showConfirmDialog(this, "Está seguro que desea eliminar?", "Eliminar Persona", 0) != 0) {
                return;
            }
            Persona p = (Persona) listPersonas.get(jTablePersonas.getSelectedRow());
            personaAction.setPersona(p);
            personaAction.eliminar();
            listPersonas.clear();
            listPersonas.addAll(personaAction.findByParameters(personaFiltro, personaFiltro2, tipoOrganizacionPersona));
        } catch (ErrorInesperado ei) {
            JOptionPane.showMessageDialog(null, "Verfique con el administrador la conexión a la base de datos y vuelva a intentar.", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jTablePersonasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePersonasMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && modoBuscador) {
            int row = jTablePersonas.getSelectedRow();
            if (row > -1) {
                personaSeleccionada = (Persona) listPersonas.get(row);
            }
            this.dispose();
        }
    }//GEN-LAST:event_jTablePersonasMouseClicked

    public Persona getPersonaSeleccionada() {
        return personaSeleccionada;
    }

    public Boolean getModoBuscador() {
        return modoBuscador;
    }

    public void setModoBuscador(Boolean modoBuscador) {
        this.modoBuscador = modoBuscador;
        if(modoBuscador){
            jButtonNuevo.setVisible(false);
            jButtonModificar.setVisible(false);
            jButtonEliminar.setVisible(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogPersonaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogPersonaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogPersonaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogPersonaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogPersonaPrincipal dialog = new JDialogPersonaPrincipal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTipoPersona;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonBuscarOrganizacion;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonImprimirFicha;
    private javax.swing.JButton jButtonImprimirListado;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonVer;
    private javax.swing.JComboBox jComboBoxEstadoCivil;
    private javax.swing.JComboBox jComboBoxNacionalidad;
    private javax.swing.JComboBox jComboBoxSexo;
    private javax.swing.JComboBox jComboBoxTipoDoc;
    private javax.swing.JFormattedTextField jFormattedTextFechDesde;
    private javax.swing.JFormattedTextField jFormattedTextFechHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelApellido;
    private javax.swing.JLabel jLabelEstCivil;
    private javax.swing.JLabel jLabelEstNacionalidad;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelOrganizacion;
    private javax.swing.JLabel jLabelSexo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTablePersonas;
    private javax.swing.JTextField jTextFieldApellidoFiltro;
    private javax.swing.JTextField jTextFieldNombreFiltro;
    private javax.swing.JTextField jTextFieldNroDoc;
    private javax.swing.JTextField jTextFieldOrganizacionFiltro;
    private java.util.List listNacionalidades;
    private java.util.List listPersonas;
    private java.util.List listTipoDocumento;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
